# Third-party python package dependencies.
# This file is auto-generated.

package(default_visibility = ["//visibility:public"])

load("@pip_deps//:requirements.bzl", "requirement")


py_library(
    name = "absl-py",
    deps = [
        ":six",
        requirement("absl-py"),
    ],
)


py_library(
    name = "astunparse",
    deps = [
        ":six",
        ":wheel",
        requirement("astunparse"),
    ],
)


py_library(
    name = "attrs",
    deps = [requirement("attrs")],
)


py_library(
    name = "backcall",
    deps = [requirement("backcall")],
)


py_library(
    name = "bleach",
    deps = [
        ":packaging",
        ":six",
        ":webencodings",
        requirement("bleach"),
    ],
)


py_library(
    name = "cachetools",
    deps = [requirement("cachetools")],
)


py_library(
    name = "certifi",
    deps = [requirement("certifi")],
)


py_library(
    name = "chardet",
    deps = [requirement("chardet")],
)


py_library(
    name = "decorator",
    deps = [requirement("decorator")],
)


py_library(
    name = "defusedxml",
    deps = [requirement("defusedxml")],
)


py_library(
    name = "entrypoints",
    deps = [requirement("entrypoints")],
)


py_library(
    name = "gast",
    deps = [requirement("gast")],
)


py_library(
    name = "google-auth",
    deps = [
        ":cachetools",
        ":pyasn1-modules",
        ":rsa",
        ":setuptools",
        ":six",
        requirement("google-auth"),
    ],
)


py_library(
    name = "google-auth-oauthlib",
    deps = [
        ":google-auth",
        ":requests-oauthlib",
        requirement("google-auth-oauthlib"),
    ],
)


py_library(
    name = "google-pasta",
    deps = [
        ":six",
        requirement("google-pasta"),
    ],
)


py_library(
    name = "grpcio",
    deps = [
        ":six",
        requirement("grpcio"),
    ],
)


py_library(
    name = "h5py",
    deps = [
        ":numpy",
        ":six",
        requirement("h5py"),
    ],
)


py_library(
    name = "idna",
    deps = [requirement("idna")],
)


py_library(
    name = "importlib-metadata",
    deps = [
        ":zipp",
        requirement("importlib-metadata"),
    ],
)


py_library(
    name = "ipykernel",
    deps = [
        ":ipython",
        ":jupyter-client",
        ":tornado",
        ":traitlets",
        requirement("ipykernel"),
    ],
)


py_library(
    name = "ipython",
    deps = [
        ":backcall",
        ":decorator",
        ":jedi",
        ":pexpect",
        ":pickleshare",
        ":prompt-toolkit",
        ":pygments",
        ":setuptools",
        ":traitlets",
        requirement("ipython"),
    ],
)


py_library(
    name = "ipython-genutils",
    deps = [requirement("ipython-genutils")],
)


py_library(
    name = "jedi",
    deps = [
        ":parso",
        requirement("jedi"),
    ],
)


py_library(
    name = "jinja2",
    deps = [
        ":markupsafe",
        requirement("jinja2"),
    ],
)


py_library(
    name = "jsonschema",
    deps = [
        ":attrs",
        ":importlib-metadata",
        ":pyrsistent",
        ":setuptools",
        ":six",
        requirement("jsonschema"),
    ],
)


py_library(
    name = "jupyter-client",
    deps = [
        ":jupyter-core",
        ":python-dateutil",
        ":pyzmq",
        ":tornado",
        ":traitlets",
        requirement("jupyter-client"),
    ],
)


py_library(
    name = "jupyter-core",
    deps = [
        ":traitlets",
        requirement("jupyter-core"),
    ],
)


py_library(
    name = "keras-preprocessing",
    deps = [
        ":numpy",
        ":six",
        requirement("keras-preprocessing"),
    ],
)


py_library(
    name = "markdown",
    deps = [
        ":importlib-metadata",
        requirement("markdown"),
    ],
)


py_library(
    name = "markupsafe",
    deps = [requirement("markupsafe")],
)


py_library(
    name = "mistune",
    deps = [requirement("mistune")],
)


py_library(
    name = "nbconvert",
    deps = [
        ":bleach",
        ":defusedxml",
        ":entrypoints",
        ":jinja2",
        ":jupyter-core",
        ":mistune",
        ":nbformat",
        ":pandocfilters",
        ":pygments",
        ":testpath",
        ":traitlets",
        requirement("nbconvert"),
    ],
)


py_library(
    name = "nbformat",
    deps = [
        ":ipython-genutils",
        ":jsonschema",
        ":jupyter-core",
        ":traitlets",
        requirement("nbformat"),
    ],
)


py_library(
    name = "notebook",
    deps = [
        ":ipykernel",
        ":ipython-genutils",
        ":jinja2",
        ":jupyter-client",
        ":jupyter-core",
        ":nbconvert",
        ":nbformat",
        ":prometheus-client",
        ":pyzmq",
        ":send2trash",
        ":terminado",
        ":tornado",
        ":traitlets",
        requirement("notebook"),
    ],
)


py_library(
    name = "numpy",
    deps = [requirement("numpy")],
)


py_library(
    name = "oauthlib",
    deps = [requirement("oauthlib")],
)


py_library(
    name = "opt-einsum",
    deps = [
        ":numpy",
        requirement("opt-einsum"),
    ],
)


py_library(
    name = "packaging",
    deps = [
        ":pyparsing",
        ":six",
        requirement("packaging"),
    ],
)


py_library(
    name = "pandocfilters",
    deps = [requirement("pandocfilters")],
)


py_library(
    name = "parso",
    deps = [requirement("parso")],
)


py_library(
    name = "pexpect",
    deps = [
        ":ptyprocess",
        requirement("pexpect"),
    ],
)


py_library(
    name = "pickleshare",
    deps = [requirement("pickleshare")],
)


py_library(
    name = "prometheus-client",
    deps = [requirement("prometheus-client")],
)


py_library(
    name = "prompt-toolkit",
    deps = [
        ":wcwidth",
        requirement("prompt-toolkit"),
    ],
)


py_library(
    name = "protobuf",
    deps = [
        ":setuptools",
        ":six",
        requirement("protobuf"),
    ],
)


py_library(
    name = "ptyprocess",
    deps = [requirement("ptyprocess")],
)


py_library(
    name = "pyasn1",
    deps = [requirement("pyasn1")],
)


py_library(
    name = "pyasn1-modules",
    deps = [
        ":pyasn1",
        requirement("pyasn1-modules"),
    ],
)


py_library(
    name = "pygments",
    deps = [requirement("pygments")],
)


py_library(
    name = "pyparsing",
    deps = [requirement("pyparsing")],
)


py_library(
    name = "pyrsistent",
    deps = [
        ":six",
        requirement("pyrsistent"),
    ],
)


py_library(
    name = "python-dateutil",
    deps = [
        ":six",
        requirement("python-dateutil"),
    ],
)


py_library(
    name = "pyzmq",
    deps = [requirement("pyzmq")],
)


py_library(
    name = "requests",
    deps = [
        ":certifi",
        ":chardet",
        ":idna",
        ":urllib3",
        requirement("requests"),
    ],
)


py_library(
    name = "requests-oauthlib",
    deps = [
        ":oauthlib",
        ":requests",
        requirement("requests-oauthlib"),
    ],
)


py_library(
    name = "rsa",
    deps = [
        ":pyasn1",
        requirement("rsa"),
    ],
)


py_library(
    name = "scipy",
    deps = [
        ":numpy",
        requirement("scipy"),
    ],
)


py_library(
    name = "send2trash",
    deps = [requirement("send2trash")],
)


py_library(
    name = "setuptools",
    deps = [requirement("setuptools")],
)


py_library(
    name = "six",
    deps = [requirement("six")],
)


py_library(
    name = "tensorboard",
    deps = [
        ":absl-py",
        ":google-auth",
        ":google-auth-oauthlib",
        ":grpcio",
        ":markdown",
        ":numpy",
        ":protobuf",
        ":requests",
        ":setuptools",
        ":six",
        ":tensorboard-plugin-wit",
        ":werkzeug",
        ":wheel",
        requirement("tensorboard"),
    ],
)


py_library(
    name = "tensorboard-plugin-wit",
    deps = [requirement("tensorboard-plugin-wit")],
)


py_library(
    name = "tensorflow",
    deps = [
        ":absl-py",
        ":astunparse",
        ":gast",
        ":google-pasta",
        ":grpcio",
        ":h5py",
        ":keras-preprocessing",
        ":numpy",
        ":opt-einsum",
        ":protobuf",
        ":scipy",
        ":six",
        ":tensorboard",
        ":tensorflow-estimator",
        ":termcolor",
        ":wheel",
        ":wrapt",
        requirement("tensorflow"),
    ],
)


py_library(
    name = "tensorflow-estimator",
    deps = [requirement("tensorflow-estimator")],
)


py_library(
    name = "termcolor",
    deps = [requirement("termcolor")],
)


py_library(
    name = "terminado",
    deps = [
        ":ptyprocess",
        ":tornado",
        requirement("terminado"),
    ],
)


py_library(
    name = "testpath",
    deps = [requirement("testpath")],
)


py_library(
    name = "tornado",
    deps = [requirement("tornado")],
)


py_library(
    name = "traitlets",
    deps = [
        ":decorator",
        ":ipython-genutils",
        ":six",
        requirement("traitlets"),
    ],
)


py_library(
    name = "urllib3",
    deps = [requirement("urllib3")],
)


py_library(
    name = "wcwidth",
    deps = [requirement("wcwidth")],
)


py_library(
    name = "webencodings",
    deps = [requirement("webencodings")],
)


py_library(
    name = "werkzeug",
    deps = [requirement("werkzeug")],
)


py_library(
    name = "wheel",
    deps = [requirement("wheel")],
)


py_library(
    name = "wrapt",
    deps = [requirement("wrapt")],
)


py_library(
    name = "zipp",
    deps = [requirement("zipp")],
)

